
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: hybrisbases.hybris.hybris.org
spec:
  group: hybris.hybris.org
  names:
    kind: HybrisBase
    listKind: HybrisBaseList
    plural: hybrisbases
    singular: hybrisbase
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HybrisBase is the Schema for the Hybris Base API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HybrisBaseSpec defines the desired state of HybrisBase
            properties:
              URL:
                description: Hybris package download URL used to download the package
                  and build the base image
                type: string
              buildSourceRepo:
                description: Source Repo stores the s2i Dockerfile
                type: string
              buildSourceRepoBranch:
                description: Source Repo branch stores the s2i Dockerfile
                type: string
              imageName:
                description: Name of the Hybris base image to be built
                type: string
              imageTag:
                description: Tag of the Hybris base image to be built
                type: string
              jdkURL:
                description: SAP Jdk download URL used to build the base image
                type: string
              password:
                description: SAP account password used to download the Hybris package
                format: password
                type: string
              username:
                description: SAP account username used to download the Hybris package
                type: string
            type: object
          status:
            description: HybrisBaseStatus defines the observed state of HybrisBase
            properties:
              buildConditions:
                items:
                  properties:
                    buildName:
                      description: Name of the build for the Hybris base image
                      type: string
                    conditions:
                      items:
                        description: "Condition represents an observation of an object's
                          state. Conditions are an extension mechanism intended to
                          be used when the details of an observation are not a priori
                          known or would not apply to all instances of a given Kind.
                          \n Conditions should be added to explicitly convey properties
                          that users and components care about rather than requiring
                          those properties to be inferred from other observations.
                          Once defined, the meaning of a Condition can not be changed
                          arbitrarily - it becomes part of the API, and has the same
                          backwards- and forwards-compatibility concerns of any other
                          part of the API."
                        properties:
                          lastTransitionTime:
                            format: date-time
                            type: string
                          message:
                            type: string
                          reason:
                            description: ConditionReason is intended to be a one-word,
                              CamelCase representation of the category of cause of
                              the current status. It is intended to be used in concise
                              output, such as one-line kubectl get output, and in
                              summarizing occurrences of causes.
                            type: string
                          status:
                            type: string
                          type:
                            description: "ConditionType is the type of the condition
                              and is typically a CamelCased word or short phrase.
                              \n Condition types should indicate state in the \"abnormal-true\"
                              polarity. For example, if the condition indicates when
                              a policy is invalid, the \"is valid\" case is probably
                              the norm, so the condition should be called \"Invalid\"."
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                  required:
                  - buildName
                  - conditions
                  type: object
                type: array
            required:
            - buildConditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
